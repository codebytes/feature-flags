name: launch-darkly-quickstart - Build and deploy ASP.Net Core app to Azure Web App 

on:
  push:
    branches:
      - main
    paths:
        - '!**'
        - 'launch-darkly-sample/**'
        - 'IaC/**'
  workflow_dispatch:

permissions:
  id-token: write
  
env:
  path: 'launch-darkly-sample'
  project: 'launchdarklymvc.csproj'

jobs:
  build-quickstart:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ${{ env.path }}
    - name: Build with dotnet
      run: dotnet build --no-restore --configuration Release ${{ env.project }}
      working-directory: ${{ env.path }}
    - name: Test
      run: dotnet test --no-build --verbosity normal ${{ env.project }}
      working-directory: ${{ env.path }}
    - name: dotnet publish
      run: dotnet publish -c Release ${{ env.project }} -o ../webapp
      working-directory: ${{ env.path }}
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: app
        path: webapp
    - uses: actions/upload-artifact@v4
      with:
        name: IaC
        path: IaC        
  deploy-quickstart:
    needs: [build-quickstart]
    environment: launchDarklyQuickstart
    runs-on: ubuntu-latest
    steps:
     # Checkout code
    - name: Download IaC
      uses: actions/download-artifact@v4
      with:
        name: IaC
        path: iac

       # Log into Azure
    - uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION }}
        
      # Deploy Bicep file
    - name: deploy
      id: deploy
      uses: azure/arm-deploy@v2
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./iac/main-ld.bicep
        parameters: webAppName=${{ secrets.AZURE_APP_NAME }}
        failOnStdErr: false

    - uses: azure/appservice-settings@v1
      with:
        app-name: ${{ steps.deploy.outputs.webAppName }} 
        app-settings-json: '[ { "name": "LD_SDK_KEY", "value":  "${{ secrets.LD_SDK_KEY }}", "type": "Custom","slotSetting": false } ]' 
        connection-strings-json: '[]'

    - name: Download App
      uses: actions/download-artifact@v4
      with:
        name: app  
        path: app

    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: azure/webapps-deploy@v3
      with: 
        app-name: ${{ steps.deploy.outputs.webAppName }} 
        package: 'app'
    
    - name: logout
      run: |
        az logout
